/////////////////
// VARIABLES
/////////////////

$tab-count: 5;
$menu-item-height: 23px;

$color-primary-light: #fcfaff;
$color-primary-dark: #145fd1;

$color-border: #dfdfdf;
$color-border-top: #212529;

$color-label-bg-inactive: #74d4ce;
$color-label-bg-active: #1b1f22;
$color-label-active: $color-border-top;
$color-label-inactive: #dee2e6;

$btn-border-top-thickness: 6px;

$tab-padding: 14px;
$tab-transition-duration: 200ms;

$panel-transition-duration: 600ms;
$main-padding: 3vh 0 2vh 0;
$menu-padding: 0 0;

/////////////////
// ELEMENTS
/////////////////

// global list style
ul#tabs-list {
  list-style: none;
  text-align: center;
  margin: 0;
  padding: 0;
}

// global label style
label.panel-label {
  user-select: none;
  display: block;
  width: 100%;
  color: $color-label-inactive;
  cursor: pointer;
  background-color: $color-label-bg-inactive;
  transition-property: background-color, color;
  transition-duration: $tab-transition-duration;

  // hover style
  &:hover {
    color: $color-label-active;
    font-weight: 800;
  }
}

// global panel style

#panels {
  .container {
    margin: 0 auto;
    width: 100%;
  }

  section {
    header {
      label.panel-label {
        padding: $menu-padding;
        box-sizing: border-box;
      }
    }

    main {
      box-sizing: border-box;
      max-height: 0;
      opacity: 0;
      transition: opacity $panel-transition-duration;
      overflow-y: hidden;
    }
  }
}

/////////////////
// MIXINS
/////////////////

// tabs list style

@mixin tabs-list-style {
  text-align: center;

  // li child
  li {
    display: inline-block;
    text-align: center;
    font-size: 0.875em;
    width: 100% / $tab-count - 2%;
    box-shadow: 0 -2px 2px rgba(0, 0, 0, 0.05);
    position: relative;

    // hover
    &:hover {
      transition: none;
      border-right: none;
    }

    // tab labels
    label.panel-label {
      position: relative;
      padding: $tab-padding 0;

      &::after {
        content: "";
        position: absolute;
        width: 100%;
        left: 0;
        bottom: 100%;
        background-color: $color-border-top;
        height: 0;
        transition-property: height;
        transition-duration: $tab-transition-duration;
      }

      &:hover {
        padding-top: $tab-padding;

        &::after {
          height: $btn-border-top-thickness;
        }
      }
    }
  }
}

// global active label styles
@mixin active-label {
  background-color: $color-label-bg-active;
  color: #dee2e6;
  font-weight: 800;
}

// active tab label style
@mixin active-tab-label {
  &::after {
    height: $btn-border-top-thickness;
  }

  // add extra pixel for shifting li downward over border
  padding-top: $tab-padding;
}

// active tab li style
@mixin active-tab-li-style {
  pointer-events: none;
  cursor: default;
  box-shadow: none;
  border-right: none;

  label.panel-label {
    @include active-label;
    @include active-tab-label;
  }
}

// active menu label style
@mixin active-menu-label {
  background-color: $color-label-active;
  color: $color-label-bg-active;
}

// active menu li style
@mixin active-menu-li-style {
  max-height: $menu-item-height;
  opacity: 1;

  label.panel-label {
    @include active-label;
    @include active-menu-label;
  }
}

// active panel style
@mixin active-panel-style {
  main {
    max-height: initial;
    opacity: 1;
    padding: $main-padding;
  }
}

// panel toggling
@for $i from 1 through $tab-count {
  #panel-#{$i}-ctrl:checked ~ #panels #panel-#{$i} {
    @include active-panel-style;
  }
}

/////////////////
// MEDIA QUERIES
/////////////////

// small devices
@media all and (max-width: 767px) {
  // displaying menu nav
  @for $i from 1 through $tab-count {
    #nav-ctrl:checked ~ #tabs-list #li-for-panel-#{$i} {
      max-height: $menu-item-height;
      opacity: 1;
    }
  }

  // "show" open nav label when closed, hide when open
  #open-nav-label {
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    cursor: pointer;
  }

  #nav-ctrl:checked ~ #tabs-list #open-nav-label {
    display: none;
  }

  #nav-ctrl:checked ~ #tabs-list #close-nav-label {
    max-height: 36px;
    opacity: 1;
    padding: $menu-padding;
  }

  // tabs list style
  #tabs-list {
    position: relative;

    label.panel-label {
      padding: $tab-padding 0;
    }

    @for $i from 1 through $tab-count {
      #li-for-panel-#{$i} {
        max-height: 0;
        overflow-y: hidden;
        transition: max-height $tab-transition-duration;
      }
    }
  }

  // tab controller triggering menu

  @for $i from 1 through $tab-count {
    #panel-#{$i}-ctrl:checked ~ #tabs-list #li-for-panel-#{$i} {
      @include active-menu-li-style;
    }
  }

  #panels {
    .container {
      width: 100%;
    }

    section header {
      display: block;
    }
  }
}

// big devices

@media all and (min-width: 768px) {
  // tab controller triggering tabs

  @for $i from 1 through $tab-count {
    #panel-#{$i}-ctrl:checked ~ #tabs-list #li-for-panel-#{$i} {
      @include active-tab-li-style;
    }
  }

  // tabs list style

  ul#tabs-list {
    @include tabs-list-style;
  }

  // nav label

  #open-nav-label,
  #close-nav-label {
    display: none;
  }

  // nav checkbox

  #nav-ctrl {
    display: none;
  }
}

// real big devices

@media all and (min-width: 900px) {
  main {
    width: 100%;
    margin: 0 auto;
  }
}

/////////////////
// DEMO STYLES
/////////////////

// radios
.panel-radios {
  $width: 20px;
  $offset: $width / 2;
  $middle: ceil($tab-count / 2);

  display: none;
  position: fixed;
  left: 55vw;
  top: 95vh;
  width: 2vh;
  opacity: 0.5;
  z-index: 99;

  // conditionally centering at top of screen (cant have wrapper...ugh math)

  @for $i from 1 through $tab-count {
    @if $i < ceil($tab-count / 2) {
      &:nth-child(#{$i}) {
        transform: translateX(-1 * $width * ($middle - $i) - $offset);
      }
    }

    @if $i == ceil($tab-count / 2) {
      &:nth-child(#{$i}) {
        transform: translateX(-1 * $offset);
      }
    }

    @if $i > ceil($tab-count / 2) {
      &:nth-child(#{$i}) {
        transform: translateX($width * ($i - $middle) - $offset);
      }
    }
  }

  // menu checkbox

  &:nth-child(#{$tab-count + 1}) {
    top: 30px;
    transform: translateX(-1 * $width / 2);
    display: block;
  }
}
